pipeline {
    agent any

    environment {
        BRANCH_NAME = "${GIT_BRANCH.split("/")[1]}"
    }

    stages {
        stage('Instalar Dependencias') {
            steps {
                bat 'composer install'
            }
        }
        stage('Construir Imagen Docker') {
            steps {
                bat "docker build -t store-${BRANCH_NAME}:1.0.0-${currentBuild.number} ."
            }
        }
        stage('Detener Contenedores Docker') {
            steps {
                bat 'docker stop $(docker ps -q)'
            }
        }
        stage('Desplegar Imagen Docker') {
            steps {
                bat "docker run -d -p 80:80 --name store-1.0.0-${currentBuild.number} store-${BRANCH_NAME}:1.0.0-${currentBuild.number}"
            }
        }
    }
    
    post {
        success {
            echo 'Â¡El segundo pipeline se ha completado exitosamente!'
        }
        
        failure {
            echo 'El segundo pipeline ha fallado!'
        }
    }
}